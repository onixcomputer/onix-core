_: {
  instances = {

    # Test VM on sequoia (desktop)
    test-vm = {
      module.name = "microvm";
      module.input = "self";
      roles.server = {
        machines."britton-desktop" = {
          settings = {
            vmName = "test-vm";
            guestConfig = ../../machines/test-vm/configuration.nix;
            autostart = true;

            # Hardware specs
            hypervisor = "cloud-hypervisor";
            vcpu = 2;
            mem = 1024;

            # Network configuration
            interfaces = [
              {
                type = "tap";
                id = "vm-test";
                mac = "02:00:00:01:01:01";
              }
            ];

            # Enable vsock for systemd notification
            vsockCid = 3;

            # Credentials to pass from host (will be auto-generated by clan vars)
            credentials = {
              api-key = {
                destination = "API-KEY";
              };
              db-password = {
                destination = "DB-PASSWORD";
              };
              jwt-secret = {
                destination = "JWT-SECRET";
              };
            };

            # Static configuration via OEM strings
            staticOemStrings = [
              "io.systemd.credential:ENVIRONMENT=test"
              "io.systemd.credential:CLUSTER=desktop"
            ];

            # Guest configuration overrides
            rootPassword = "test"; # For testing only!
            firewallPorts = [
              80
              443
            ];

            # Enable demo credential logging service
            enableDemoCredentialService = true;

            # Guest packages
            guestPackages = [ ];
          };
        };
      };
    };

    # Monitoring VM on sequoia
    monitoring-vm = {
      module.name = "microvm";
      module.input = "self";
      roles.server = {
        machines."desktop" = {
          settings = {
            vmName = "monitoring-vm";
            guestConfig = ../../machines/monitoring-vm/configuration.nix;
            autostart = true;

            # Hardware specs
            hypervisor = "cloud-hypervisor";
            vcpu = 2;
            mem = 2048; # More memory for monitoring services

            # Network configuration with unique MAC
            interfaces = [
              {
                type = "tap";
                id = "vm-monitor";
                mac = "02:00:00:02:02:02";
              }
            ];

            # Different vsock CID
            vsockCid = 4;

            # Monitoring-specific credentials
            credentials = {
              grafana-admin-password = {
                destination = "GRAFANA-ADMIN-PASSWORD";
              };
              prometheus-token = {
                destination = "PROMETHEUS-TOKEN";
              };
              loki-auth-token = {
                destination = "LOKI-AUTH-TOKEN";
              };
              webhook-secret = {
                destination = "WEBHOOK-SECRET";
              };
              monitoring-api-key = {
                destination = "MONITORING-API-KEY";
              };
            };

            # Static configuration for monitoring
            staticOemStrings = [
              "io.systemd.credential:ENVIRONMENT=monitoring"
              "io.systemd.credential:ROLE=observability"
              "io.systemd.credential:CLUSTER=desktop"
            ];

            # Guest configuration
            rootPassword = "monitor"; # For testing only!
            firewallPorts = [
              3000 # Grafana
              9090 # Prometheus
              3100 # Loki
              9093 # Alertmanager
            ];

            # Enable demo credential logging service for testing
            enableDemoCredentialService = true;

            # Guest packages
            guestPackages = [ ];
          };
        };
      };
    };

    # Example: Same VM on different host (commented out)
    # test-vm-on-ultrathink = {
    #   module.name = "microvm";
    #   module.input = "self";
    #   roles.server = {
    #     machines."ultrathink" = {
    #       settings = {
    #         vmName = "test-vm";
    #         guestConfig = ../../machines/test-vm/configuration.nix;
    #         autostart = false;
    #
    #         # Different hardware allocation for laptop
    #         hypervisor = "cloud-hypervisor";
    #         vcpu = 1;
    #         mem = 512;
    #
    #         # Same network config but would be on different bridge
    #         interfaces = [
    #           {
    #             type = "tap";
    #             id = "vm-test";
    #             mac = "02:00:00:01:01:01";
    #           }
    #         ];
    #
    #         vsockCid = 3;
    #
    #         # Same credential requirements
    #         credentials = {
    #           api-key = {
    #             destination = "API-KEY";
    #           };
    #           db-password = {
    #             destination = "DB-PASSWORD";
    #           };
    #           jwt-secret = {
    #             destination = "JWT-SECRET";
    #           };
    #         };
    #
    #         staticOemStrings = [
    #           "io.systemd.credential:ENVIRONMENT=test"
    #           "io.systemd.credential:CLUSTER=ultrathink"
    #         ];
    #
    #         rootPassword = "test";
    #         firewallPorts = [ 80 443 ];
    #       };
    #     };
    #   };
    # };

  };
}
